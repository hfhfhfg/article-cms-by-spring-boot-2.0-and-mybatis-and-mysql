1부

*Spring Boot , 마이바티스 , Mysql 이용해서 간단한 게시판 구현

-STS 4.0 툴을 이용해서 스프링 부트 2.0 프로젝트 생성
- GITHUB 리포지터리 생성
- 프로젝트 폴더와 GIT HUB 리포지터리의 MASTER 브랜치와 연결
- .gitignore에 버전관리 안할 파일들 추가
- 첫 커밋 하기전에 기본세팅부터 하기
	-의존성 추가
	-aplication.yml 세팅
	-log4jdbc.log4j2.properties, logback.xml 복사
		-이걸 하는 이유는 실행되는 SQL을 예쁘게 로그로 보여주기 위해
			-그걸 위한 기본적인 세팅입니다.
	-DB 세팅
- 켜지는지 확인하기
- 컨트롤러 하나 만들어서 확인
- commit (처음에 push 안될땐 head:master로 명시적으로 지정해주기)
- 서버로 push
	-기존의 크리덴셜 삭제(여기선 하지 않았음 명시적인 방법으로 해결하였음)
	-올림
- 서버에서 확인
- 리스트 JSP 추가[완료]
- ArticleSerivce, ArticleServiceImple, ArticleDto 생성 및 세팅 ,getList() 함수를 구현 (처음엔 가데이터로)
	-DB에서 가져온 데이터가 아닌 가데이터로 결과를 먼저 확인한다.
	-중간확인을 위함임.
- 컨트롤러가 받은 list를 jsp에 넘겨서 보여주기
- 이제 Dao를 통해서 진데이터를 처리
- ArticleDao 생성 및 적용
- ArticleDaoImpl을 마이바티스가 대신 작업하도록( 참고로 마이바티스는 진짜 DB에서 가져온다.)
- Add.jsp 작동하게 하기
- doAdd 작업하기
- doAdd를 하는 와중에 auto_increment 에 의해 생긴 주기 키 값을 알아내야 한다.
- CUTIL 도입 (왜냐? 너무 불편하니까(Bigint를 long으로 바꾸는게 너무 길다.)
- 리스트 페이지에 총 게시물 개수 보여주기
- 게시물 등록후 상세페이지로 이동하도록 처리 ( 상세 페이지 아직 미구현 )
- 게시물리스트에 새로운 게시물 추가 버튼 생성
- 게시물 상세페이지 생성 및 작업
- 게시물 삭제 서비스 구현
- common.css 도입 link 태그의 rel과 href를 이용하였다
- 리스트페이지 디자인 정리 ( common.css 추가한 것을 이용)
- 리스트에 게시물아이템 링크걸기
- 작성페이지 디자인 정리
- common.css 폰트작업 ( url 을 이용한 폰트 사용방법)
- 게시물 수정뷰 작업 ( add 폼을 이용해서 hidden특성으로 id를 넘기는 것과 초기 value를 placeholder외에 별도로 지정하였다 )
- 게시물 수정처리 작업 ( CUtil을 다시 사용하였다. )
- hit column추가 ( 상세페이지를 호출 할 떄 마다 hit = hit+1 을 이용 하였음

2부

- 기존 데이터 모두 삭제후 다시 진행
- 회원가입 만들기
	- /member/join 페이지 만들기
		- member/join.jsp 만들기
- 회원가입폼에서 받은데이터 처리하는 부분구현
	- DB 데이터 생성
	- Member 테이블에 대응하는 MemberDto 생성'
	- 로그인 Id 중복체크 구현
	- test 해보기
	- 로그인 ID가 중복된것이라면 뒤로가기

- 회원가입 처리하고, 회원가입이 성공하면 로그인 페이지로 보내기 구현

- 현재까지의 문제점
	-이 사이트에 있는 페이지의, 거의 대부분에서 아래 정보를 매번 불러와야 한다.
		-회원이 로그인했는지
		-회원이 로그인 했따면, 회원번호, 회원이름
	- 위 문제를 해결하기 위해서, 인터셉터를 도입한다.
		-인터셉터는 매 액션 시행 전에 실행이 되어, request 객체에 필요한 정보를 제공한다.

- 인터셉터 도입 ( BefroeActionInterceiptor_
	-하는일 : 모든 액션 수행 전에 필수정보를 미리 세팅한다.
		- 필수정보 : 로그인 유무, 로그인한 회원의 정보
	- 테스즈 정보 세팅 : 속성명(testNum)
- 인터셉터 적용[완료]

이제 /home/main 에서 직접 세션에서 데이터 꺼내와서 작업하는걸 지우고 인터셉터가 넣어준 정보를 활용하는 방식으로 적용해본다.

- 로그인 되어야 이용할 수 있는 페이지
- 비로그인 일때 확인되는 페이지를 c:if test 태그를 통하여 화면구현을 이분화 하였다

- 개발의 편의를 위해 head.jspf 와 foot.jspf 다시 수정

- 로그인이 필요한 페이지 동작 처리 ( ex) 게시물 작성등을 주소를 통해 강제로 올 수 없게.)
	-NeedToLogin 인터셉터, NeedToLogout인터셉터 추가 완료
	-2개의 인터셉터를 적절한 액션들과 연결시켜보기

	-Test : 로그아웃 상태일 때 글쓰기 페이지로 이동해보기
